{"version":3,"sources":["assets/search.svg","components/search/search.js","components/photos/photos.js","api.js","redux/actions/actionTypes.js","redux/actions/dispatchPhotos.js","components/app/App.js","redux/reducers/photos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Search","handleKeyUp","style","firstSearch","className","src","searchSrc","alt","type","onKeyUp","Photos","photos","handleLastRow","renderedPhotos","map","url","id","backgroundImage","href","target","key","onLastRow","rowHeight","accessKey","getJSON","a","fetch","mode","res","json","cache","fetchPhotos","query","Error","toLowerCase","trim","URL","console","log","FETCH_PHOTOS","Object","freeze","INITIAL","SUCCESS","FAILURE","PhotosSuccess","results","result","urls","small","fetchReviews","dispatch","data","err","connect","state","useState","photoLimit","setPhotoLimit","setFirstSearch","e","value","CSSTransition","in","timeout","classNames","slice","initialState","inProgress","reducer","prevState","action","combineReducers","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.103ea761.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.d71d6abf.svg\";","import React from 'react';\r\nimport searchSrc from '../../assets/search.svg';\r\nimport './search.scss';\r\n\r\nfunction Search({handleKeyUp, firstSearch}) {\r\n    let style = {\r\n        'width': '80%'\r\n    };\r\n    if (firstSearch) {\r\n        style = {\r\n            'width': '50%'\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"search-container\" style={style}>\r\n            <img src={searchSrc} alt=\"search icon\"/>\r\n            <input type=\"text\" className=\"search\" onKeyUp={handleKeyUp}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './photos.scss';\r\nimport VirtualScroll from 'virtual-scroll-component';\r\n\r\nfunction Photos({photos, handleLastRow}) {\r\n    const renderedPhotos = photos.map(({url,id}) => {\r\n        const style = {\r\n            backgroundImage: `url(${url})`\r\n        };\r\n       return (\r\n           <a href={url} target={\"_blank\"} key={id}>\r\n               <div className={\"photo\"} style={style}/>\r\n           </a>\r\n       );\r\n    });\r\n\r\n    return (\r\n        <VirtualScroll className={\"photos\"} onLastRow={handleLastRow} rowHeight={250}>\r\n            {renderedPhotos}\r\n        </VirtualScroll>\r\n    );\r\n}\r\n\r\nexport default Photos;\r\n","const accessKey = \"3667e8c8bcfc5bf54ea4727452748ff23cffca590b79e22381c3b51880ff66a0\";\r\n\r\n/**\r\n * @param url\r\n * @returns {Promise<any>}\r\n * @desc Fetch the url and returns a promise\r\n * for the JSON response.\r\n */\r\nasync function getJSON(url) {\r\n    try {\r\n        const res = await fetch(url, {mode: 'cors'});\r\n        return await res.json();\r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n\r\n/**\r\n * @param query - string || []\r\n * @desc Queries for photos from Unsplash API.\r\n * https://unsplash.com/documentation#list-photos\r\n */\r\nconst cache = {};\r\nexport async function fetchPhotos(query) {\r\n    if (!query) throw new Error(\"Invalid query.\");\r\n    query && (query = query.toLowerCase().trim());\r\n    if (!(query in cache)) {\r\n        let URL = `https://api.unsplash.com/search/photos?client_id=${accessKey}&per_page=999&query=${query}`;\r\n        try {\r\n            cache[query] = await getJSON(URL);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    return cache[query];\r\n}","export const FETCH_PHOTOS = Object.freeze({\r\n    INITIAL: \"INITIAL\",\r\n    SUCCESS: \"SUCCESS\",\r\n    FAILURE: \"FAILURE\"\r\n});\r\n","import {fetchPhotos} from \"../../api\";\r\nimport {FETCH_PHOTOS} from \"./actionTypes\";\r\n\r\nfunction PhotosInitial() {\r\n    return {type: FETCH_PHOTOS.INITIAL};\r\n}\r\n\r\nfunction PhotosSuccess({results}) {\r\n    return {\r\n        type: FETCH_PHOTOS.SUCCESS,\r\n        photos: results.map(result => ({\r\n            id: result.id,\r\n            url: result.urls.small\r\n        }))\r\n    };\r\n}\r\n\r\nfunction PhotosFailure(err) {\r\n    return {\r\n        type: FETCH_PHOTOS.FAILURE,\r\n        err\r\n    };\r\n}\r\n\r\nfunction fetchReviews(query) {\r\n    return async function (dispatch) {\r\n        query && (query = query.toLowerCase());\r\n        dispatch(PhotosInitial());\r\n        try {\r\n            const data = await fetchPhotos(query);\r\n            dispatch(PhotosSuccess(data));\r\n        } catch (e) {\r\n            dispatch(PhotosFailure(e));\r\n        }\r\n    }\r\n}\r\n\r\nexport default fetchReviews;","import React, {useState} from 'react';\nimport './App.scss';\nimport Search from '../search/search';\nimport Photos from \"../photos/photos\";\nimport fetchPhotos from '../../redux/actions/dispatchPhotos';\nimport {connect} from 'react-redux';\nimport {CSSTransition} from \"react-transition-group\";\n\nfunction App({photos, dispatch}) {\n  const PHOTO_LENGTH = 12;\n  const [photoLimit, setPhotoLimit] = useState(PHOTO_LENGTH);\n  const [firstSearch, setFirstSearch] = useState(true);\n\n  const handleKeyUp = e => {\n    if (firstSearch) setFirstSearch(false);\n    try {\n      dispatch(fetchPhotos(e.target.value));\n      setPhotoLimit(PHOTO_LENGTH);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleLastRow = () => {\n    setPhotoLimit(photoLimit + PHOTO_LENGTH);\n  };\n\n  let style = {\n    'top': '50px'\n  };\n  if (firstSearch) {\n    style = {\n      'top': '50%'\n    }\n  }\n\n  return (\n      <main>\n        <div className={\"query-container\"} style={style}>\n          <Search handleKeyUp={handleKeyUp} firstSearch={firstSearch}/>\n        </div>\n        <CSSTransition in={!firstSearch} timeout={500} classNames={'photos'}>\n          <Photos photos={photos.slice(0,photoLimit)} handleLastRow={handleLastRow}/>\n        </CSSTransition>\n      </main>\n\n  );\n}\n\nconst mapPropsToState = (state) => {\n  return {\n    photos: state.photos.photos\n  }\n};\n\nexport default connect(mapPropsToState)(App);\n","import {FETCH_PHOTOS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    photos: [],\r\n    inProgress: false,\r\n    err: null\r\n};\r\n\r\nfunction reducer (prevState = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_PHOTOS.INITIAL:\r\n            return {\r\n                ...prevState,\r\n                inProgress: true\r\n            };\r\n        case FETCH_PHOTOS.SUCCESS:\r\n            return {\r\n                ...prevState,\r\n                inProgress: false,\r\n                photos: action.photos,\r\n                err: null\r\n            };\r\n        case FETCH_PHOTOS.FAILURE:\r\n            return {\r\n                ...prevState,\r\n                err: action.err,\r\n                photos: [],\r\n            };\r\n        default:\r\n            return prevState\r\n    }\r\n}\r\n\r\nexport default reducer;","import {combineReducers} from \"redux\";\r\nimport photos from \"./photos\";\r\n\r\nexport default combineReducers({photos});","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport App from './components/app/App';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}